{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/composer-page/webpack/bootstrap","webpack://@clarkwinkelmann/composer-page/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/composer-page/webpack/runtime/define property getters","webpack://@clarkwinkelmann/composer-page/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/composer-page/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/components/Composer']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/states/ComposerState']\"","webpack://@clarkwinkelmann/composer-page/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/composer-page/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/Page']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@clarkwinkelmann/composer-page/./src/forum/components/ComposerPage.ts","webpack://@clarkwinkelmann/composer-page/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/composer-page/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Composer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState'];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport listItems from 'flarum/common/helpers/listItems';\nimport extractText from 'flarum/common/utils/extractText';\nimport Stream from 'flarum/common/utils/Stream';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Tag from 'flarum/tags/common/models/Tag';\n\n// Copied from flarum-tags addTagFilter()\nconst findTag = (slug: string) => app.store.all<Tag>('tags').find((tag) => tag.slug().localeCompare(slug, undefined, {sensitivity: 'base'}) === 0);\n\nfunction isPrivateDiscussion(): boolean {\n    const PrivateDiscussionComposer = (flarum.extensions['fof-byobu'] as any)?.discussions?.PrivateDiscussionComposer;\n\n    return PrivateDiscussionComposer && app.composer.bodyMatches(PrivateDiscussionComposer);\n}\n\nexport default class ComposerPage extends Page {\n    loading: boolean = false\n    handlers: any = {}\n\n    currentTag(): Promise<Tag | null | undefined> {\n        return new Promise(resolve => {\n            const {slug} = m.route.param();\n\n            if (!slug) {\n                return resolve(null);\n            }\n\n            const tag = findTag(slug);\n\n            if (tag) {\n                return resolve(tag);\n            }\n\n            this.loading = true;\n\n            // Same code as in flarum-tags IndexPage.prototype.currentTag\n            // Maybe the number of relationships is overkill for our use case here\n            app.store\n                .find('tags', slug, {include: 'children,children.parent,parent,state'})\n                .then(() => {\n                    this.loading = false;\n                    resolve(findTag(slug));\n                });\n        });\n    }\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        app.setTitle(extractText(app.translator.trans('clarkwinkelmann-composer-page.forum.page' + (isPrivateDiscussion() ? '-private' : '') + '.title')));\n        app.setTitleCount(0);\n\n        // Invoke the preloaded payload to get access to the current tag(s)\n        app.preloadedApiDocument();\n\n        const {user} = app.session;\n\n        if (!user) {\n            this.loading = true;\n\n            // If user is logged out, redirect to index page\n            m.route.set(app.route('index'));\n\n            return;\n        }\n\n        if (!app.composer.bodyMatches(DiscussionComposer)) {\n            app.composer.load(DiscussionComposer, {\n                user,\n            });\n            // Will not actually show the real composer, but that's where our logic to set the default when leaving the standalone page resides\n            // so we need to call it at some point to prepare the composer\n            app.composer.show();\n\n            const fields = app.composer.fields as any;\n\n            if (fields) {\n                const {title, content} = m.route.param();\n\n                if (title) {\n                    // Most likely, the title field won't exist yet at this point\n                    // but we'll handle both options just to be sure\n                    if (fields.title) {\n                        fields.title(title);\n                    } else {\n                        fields.title = Stream(title);\n                    }\n                }\n\n                if (content && fields.content) {\n                    fields.content(content);\n                }\n\n                const currentRouteName = (app.current.data as any).routeName;\n\n                if (currentRouteName === 'composeTag') {\n                    this.currentTag().then(tag => {\n\n                        if (tag) {\n                            const parent = tag.parent();\n                            fields.tags = parent ? [parent, tag] : [tag];\n                        } else {\n                            fields.tags = [];\n                        }\n\n                        m.redraw();\n\n                        this.updateHeight();\n                    });\n                }\n            }\n        }\n    }\n\n    view() {\n        const isPrivate = isPrivateDiscussion();\n\n        return m('.ComposerPageContainer', {\n            className: isPrivate ? 'ComposerPageContainer--private-discussion' : '',\n        }, m('.container', m('.sideNavContainer', [\n            m('nav.IndexPage-nav.sideNav', m('ul', listItems(IndexPage.prototype.sidebarItems().toArray()))),\n            m('.sideNavOffset', m('.ComposerPage', [\n                m('h2.App-titleControl', app.translator.trans('clarkwinkelmann-composer-page.forum.page' + (isPrivate ? '-private' : '') + '.heading')),\n                this.body(),\n            ])),\n        ])));\n    }\n\n    body() {\n        const body = app.composer.body as any;\n\n        if (!body.componentClass || this.loading) {\n            return LoadingIndicator.component();\n        }\n\n        return body.componentClass.component({\n            ...body.attrs,\n            composer: app.composer,\n            disabled: false,\n        });\n    }\n\n    oncreate(vnode: any) {\n        super.oncreate(vnode);\n\n        $(window).on('resize', (this.handlers.onresize = this.updateHeight.bind(this)));\n\n        // We need to watch for changes to the content because it can change while editing:\n        // - When adding many tags it can span multiple lines\n        // - When adding or removing lines in Formulaire multi-entry fields\n        // - When Formulaire validation errors appear during submitting\n        this.handlers.observer = new ResizeObserver(this.updateHeight.bind(this));\n        this.handlers.observer.observe(this.element.querySelector('.ComposerBody-header'));\n\n        // We need a little delay before the first height update because the TextEditor doesn't initialize the textarea in the same rendering thread\n        setTimeout(() => {\n            this.updateHeight();\n        }, 10);\n    }\n\n    onremove(vnode: any) {\n        super.onremove(vnode);\n\n        $(window).off('resize', this.handlers.onresize);\n\n        this.handlers.observer.disconnect();\n\n        // If we leave the page without quitting the composer, switch to the floating composer\n        if (app.composer.bodyMatches(DiscussionComposer)) {\n            app.composer.minimize();\n        }\n    }\n\n    updateHeight() {\n        const $flexible = this.$('.Composer-flexible');\n\n        // Adapted from Composer.prototype.updateHeight\n        // The comparison is now done directly against the full document\n        if ($flexible.length) {\n            const headerHeight = $flexible.offset()!.top;\n            const paddingBottom = parseInt($flexible.css('padding-bottom'), 10);\n            const footerHeight = this.$('.Composer-footer').outerHeight(true)!;\n\n            $flexible.height(Math.max(window.innerHeight - headerHeight - paddingBottom - footerHeight, 200));\n        }\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import {extend, override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport listItems from 'flarum/common/helpers/listItems';\nimport Composer from 'flarum/forum/components/Composer';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport ComposerState from 'flarum/forum/states/ComposerState';\nimport ComposerPage from './components/ComposerPage';\n\nfunction isComposerPage(): boolean {\n    const currentRouteName = (app.current.data as any).routeName;\n\n    return currentRouteName === 'compose' || currentRouteName === 'composeTag';\n}\n\nfunction shouldUsePage(tagSlugs: string[]): boolean {\n    const pageTags = app.forum.attribute<string>('composerPageTags');\n\n    // If nothing set, applies to all\n    if (!pageTags) {\n        return true;\n    }\n\n    return pageTags.split(',').some(slug => tagSlugs.indexOf(slug) !== -1);\n}\n\napp.initializers.add('clarkwinkelmann-composer-page', () => {\n    app.routes.compose = {path: '/compose', component: ComposerPage};\n    // Calling the parameter the same as the original tag route (:tags) seems to lead to issues detecting the current tag when switching between the 2 routes\n    // So we'll call it :slug instead\n    app.routes.composeTag = {path: '/t/:slug/compose', component: ComposerPage};\n\n    override(Composer.prototype, 'view', function (original) {\n        if (!isComposerPage()) {\n            return original();\n        }\n\n        // We don't really need any of this, but we return an almost identical template to the original to reduce the risk of extensions breaking\n        // Also there's a lot of hooks around those elements so removing them from the DOM might break the reply composer\n        // The only goal is to remove the ComposerBody element so we don't have 2 text editors on the page at the same time\n        return m('.Composer', [\n            m('.Composer-handle', {\n                oncreate: this.configHandle.bind(this),\n            }),\n            m('ul.Composer-controls', listItems(this.controlItems().toArray())),\n            m('.Composer-handle'),\n            m('.Composer-content'),\n        ]);\n    });\n\n    let lastTagSelectionHash = '[]';\n\n    // This code could be in any onupdate hook, as long as it's a component that exists continously\n    extend(Composer.prototype, 'onupdate', function () {\n        const selectedTagSlugs = ((app.composer.fields || {}).tags || []).map(tag => tag.slug());\n\n        const newHash = JSON.stringify(selectedTagSlugs);\n\n        // We don't need a check for private discussions here\n        // Since the Byobu composer doesn't have a control for tags, the hash will never change\n        if (lastTagSelectionHash !== newHash) {\n            // Check if new tags selection needs the composer page\n            if (app.composer.bodyMatches(DiscussionComposer) && shouldUsePage(selectedTagSlugs) && !isComposerPage()) {\n                // Don't switch page before the tags modal has closed otherwise it can never be closed again the next time it's opened\n                setTimeout(() => {\n                    app.composer.show();\n                }, 220); // Modal animation is 200ms by default, add a bit more for margin\n            }\n\n            lastTagSelectionHash = newHash;\n        }\n    });\n\n    override(ComposerState.prototype, 'show', function (original) {\n        if (!this.bodyMatches(DiscussionComposer)) {\n            return original();\n        }\n        const PrivateDiscussionComposer = (flarum.extensions['fof-byobu'] as any)?.discussions?.PrivateDiscussionComposer;\n\n        if (PrivateDiscussionComposer && this.bodyMatches(PrivateDiscussionComposer) && !app.forum.attribute<string>('composerPagePrivateDiscussions')) {\n            return original();\n        }\n\n        // Use normal composer for tags where this feature is not enabled, unless we are already on the page\n        if (!shouldUsePage((this.fields?.tags || []).map(tag => tag.slug())) && !isComposerPage()) {\n            return original();\n        }\n\n        // Set position to minimized in case the user leaves changes page without cancelling the composer\n        this.position = ComposerState.Position.HIDDEN;\n\n        if (!isComposerPage()) {\n            m.route.set(app.route('compose'));\n        }\n    });\n\n    override(ComposerState.prototype, 'isVisible', function (original) {\n        // We must return visible here so that features like the exit callbacks get triggered\n        // We must also check the body because otherwise it returns true in ComposerState.prototype.load which creates nested redraws\n        if (this.bodyMatches(DiscussionComposer) && isComposerPage()) {\n            return true;\n        }\n\n        return original();\n    });\n\n    override(DiscussionComposer.prototype, 'oninit', function (original, vnode) {\n        // This code runs before oninit, so this.composer or this.attrs won't work. We need vnode.attrs\n        const content = vnode.attrs.composer.fields.content();\n\n        original(vnode);\n\n        // Copy over the existing value, otherwise it's lost when changing between page<->composer\n        this.composer.fields.content(content);\n    });\n\n    extend(DiscussionComposer.prototype, 'view', function (vdom: any) {\n        if (!isComposerPage()) {\n            return;\n        }\n\n        // Add a second button that we will keep at the bottom on mobile\n        // Otherwise it's not super obvious you need to click at the top right\n        // Some people might even want to hide the top right button to force people to scroll properly to the bottom\n        vdom.children.push(m('.ComposerPageMobileSubmit', Button.component({\n            icon: 'fas fa-paper-plane',\n            className: 'Button Button--primary',\n            onclick: this.onsubmit.bind(this),\n        }, this.attrs.submitLabel)));\n    });\n\n    extend(IndexPage.prototype, 'sidebarItems', function (items) {\n        const newDiscussion = items.has('newDiscussion') && items.get('newDiscussion');\n\n        // Don't replace button if guest, because that button will open the login modal in that situation\n        if (!newDiscussion || !app.session.user) {\n            return;\n        }\n\n        // Do not modify Byobu's button\n        // This means there will be no \"continue\" button either but that's fine\n        if (newDiscussion.attrs.itemClassName?.indexOf('fof-byobu_primaryControl') !== -1) {\n            return;\n        }\n\n        if (isComposerPage()) {\n            newDiscussion.attrs.className = newDiscussion.attrs.className.replace('Button--primary', '');\n            newDiscussion.attrs.icon = 'fas fa-trash';\n            delete newDiscussion.attrs.itemClassName; // Remove App-primaryControl otherwise there might be a conflict with the composer buttons\n            newDiscussion.children = app.translator.trans('clarkwinkelmann-composer-page.forum.nav.cancel');\n\n            return;\n        }\n\n        if (app.composer.bodyMatches(DiscussionComposer)) {\n            // Remove color since the button won't start a new discussion in current tag\n            newDiscussion.attrs.className = newDiscussion.attrs.className.replace('Button--tagColored', '');\n            newDiscussion.attrs.className = newDiscussion.attrs.className.replace('Button--primary', '');\n            if (newDiscussion.attrs.style) {\n                delete newDiscussion.attrs.style['--color'];\n            }\n            newDiscussion.children = app.translator.trans('clarkwinkelmann-composer-page.forum.nav.continue');\n            return;\n        }\n\n        const tag = this.currentTag && this.currentTag();\n\n        const tagSlugs = [];\n\n        if (tag) {\n            tagSlugs.push(tag.slug());\n\n            const parent = tag.parent();\n\n            if (parent) {\n                tagSlugs.push(parent.slug());\n            }\n        }\n\n        // If a tag setting was set, we'll start by opening normally\n        if (!shouldUsePage(tagSlugs)) {\n            return;\n        }\n\n        // Replace button with link. This serves multiple purposes:\n        // - No need to override IndexPage.prototype.newDiscussionAction to change the URL for tags\n        // - Ability to open in new tab\n        newDiscussion.tag = LinkButton;\n        newDiscussion.attrs.href = tag ? app.route('composeTag', {slug: tag.slug()}) : app.route('compose');\n        delete newDiscussion.attrs.onclick;\n    });\n\n    override(IndexPage.prototype, 'newDiscussionAction', function (original) {\n        // Action for \"cancel\" label\n        if (isComposerPage()) {\n            // Call close to invoke any exit callback\n            app.composer.close();\n\n            // Check that the composer successfully closed\n            // (it could still be prevented at that point)\n            if (!(app.composer.body as any).componentClass) {\n                m.route.set(app.route('index'));\n            }\n\n            return Promise.resolve();\n        }\n\n        // Action for our \"continue\" label. Will try to re-open the page, or just the composer if page is not required\n        if (app.composer.bodyMatches(DiscussionComposer)) {\n            app.composer.show();\n\n            return Promise.resolve();\n        }\n\n        return original();\n    });\n\n    // This method is exposed in FoF Upload for this specific reason\n    // We don't really need to check whether we are on the composer page, we can just return a new selector if the original returned nothing\n    // We target the editor and not the whole page to make sure it doesn't interfere with Formulaire upload fields\n    override(TextEditor.prototype, 'fofUploadDragAndDropTarget', function (original) {\n        const target = original();\n\n        if (!target) {\n            return this.$('.TextEditor-editor')[0];\n        }\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_extends","assign","bind","target","i","arguments","length","source","apply","this","_setPrototypeOf","p","setPrototypeOf","__proto__","findTag","slug","app","all","find","tag","localeCompare","undefined","sensitivity","isPrivateDiscussion","_flarum$extensions$fo","PrivateDiscussionComposer","extensions","discussions","bodyMatches","ComposerPage","_Page","subClass","superClass","_this","_len","args","Array","_key","concat","loading","handlers","create","constructor","_proto","currentTag","_this2","Promise","resolve","m","route","param","include","then","oninit","vnode","_this3","extractText","trans","user","set","DiscussionComposer","load","show","fields","_m$route$param2","title","content","Stream","data","routeName","parent","tags","redraw","updateHeight","view","isPrivate","className","listItems","IndexPage","sidebarItems","toArray","body","componentClass","LoadingIndicator","component","attrs","composer","disabled","oncreate","_this4","$","window","on","onresize","observer","ResizeObserver","observe","element","querySelector","setTimeout","onremove","off","disconnect","minimize","$flexible","headerHeight","offset","top","paddingBottom","parseInt","css","footerHeight","outerHeight","height","Math","max","innerHeight","Page","isComposerPage","currentRouteName","shouldUsePage","tagSlugs","pageTags","attribute","split","some","indexOf","add","compose","path","composeTag","override","Composer","original","configHandle","controlItems","lastTagSelectionHash","extend","selectedTagSlugs","map","newHash","JSON","stringify","ComposerState","_this$fields","position","HIDDEN","vdom","children","push","Button","icon","onclick","onsubmit","submitLabel","items","_newDiscussion$attrs$","newDiscussion","has","itemClassName","replace","style","LinkButton","href","close","TextEditor"],"sourceRoot":""}