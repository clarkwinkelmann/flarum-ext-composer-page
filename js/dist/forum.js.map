{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/composer-page/webpack/bootstrap","webpack://@clarkwinkelmann/composer-page/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/composer-page/webpack/runtime/define property getters","webpack://@clarkwinkelmann/composer-page/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/composer-page/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/components/Composer']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['forum/states/ComposerState']\"","webpack://@clarkwinkelmann/composer-page/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/composer-page/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/Page']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@clarkwinkelmann/composer-page/./src/forum/components/ComposerPage.ts","webpack://@clarkwinkelmann/composer-page/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/composer-page/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/composer-page/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Composer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState'];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport listItems from 'flarum/common/helpers/listItems';\nimport extractText from 'flarum/common/utils/extractText';\nimport Stream from 'flarum/common/utils/Stream';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Tag from 'flarum/tags/common/models/Tag';\n\n// Copied from flarum-tags addTagFilter()\nconst findTag = (slug: string) => app.store.all<Tag>('tags').find((tag) => tag.slug().localeCompare(slug, undefined, {sensitivity: 'base'}) === 0);\n\nexport default class ComposerPage extends Page {\n    loading: boolean = false\n    handlers: any = {}\n\n    currentTag(): Promise<Tag | null | undefined> {\n        return new Promise(resolve => {\n            const {slug} = m.route.param();\n\n            if (!slug) {\n                return resolve(null);\n            }\n\n            const tag = findTag(slug);\n\n            if (tag) {\n                return resolve(tag);\n            }\n\n            this.loading = true;\n\n            // Same code as in flarum-tags IndexPage.prototype.currentTag\n            // Maybe the number of relationships is overkill for our use case here\n            app.store\n                .find('tags', slug, {include: 'children,children.parent,parent,state'})\n                .then(() => {\n                    this.loading = false;\n                    resolve(findTag(slug));\n                });\n        });\n    }\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        app.setTitle(extractText(app.translator.trans('clarkwinkelmann-composer-page.forum.page.title')));\n        app.setTitleCount(0);\n\n        // Invoke the preloaded payload to get access to the current tag(s)\n        app.preloadedApiDocument();\n\n        const {user} = app.session;\n\n        if (!user) {\n            this.loading = true;\n\n            // If user is logged out, redirect to index page\n            m.route.set(app.route('index'));\n\n            return;\n        }\n\n        if (!app.composer.bodyMatches(DiscussionComposer)) {\n            app.composer.load(DiscussionComposer, {\n                user,\n            });\n            // Will not actually show the real composer, but that's where our logic to set the default when leaving the standalone page resides\n            // so we need to call it at some point to prepare the composer\n            app.composer.show();\n\n            const fields = app.composer.fields as any;\n\n            if (fields) {\n                const {title, content} = m.route.param();\n\n                if (title) {\n                    // Most likely, the title field won't exist yet at this point\n                    // but we'll handle both options just to be sure\n                    if (fields.title) {\n                        fields.title(title);\n                    } else {\n                        fields.title = Stream(title);\n                    }\n                }\n\n                if (content && fields.content) {\n                    fields.content(content);\n                }\n\n                const currentRouteName = (app.current.data as any).routeName;\n\n                if (currentRouteName === 'composeTag') {\n                    this.currentTag().then(tag => {\n\n                        if (tag) {\n                            const parent = tag.parent();\n                            fields.tags = parent ? [parent, tag] : [tag];\n                        } else {\n                            fields.tags = [];\n                        }\n\n                        m.redraw();\n\n                        this.updateHeight();\n                    });\n                }\n            }\n        }\n    }\n\n    view() {\n        return m('.ComposerPageContainer', m('.container', m('.sideNavContainer', [\n            m('nav.IndexPage-nav.sideNav', m('ul', listItems(IndexPage.prototype.sidebarItems().toArray()))),\n            m('.sideNavOffset', m('.ComposerPage', [\n                m('h2.App-titleControl', app.translator.trans('clarkwinkelmann-composer-page.forum.page.heading')),\n                this.body(),\n            ])),\n        ])));\n    }\n\n    body() {\n        const body = app.composer.body as any;\n\n        if (!body.componentClass || this.loading) {\n            return LoadingIndicator.component();\n        }\n\n        return body.componentClass.component({\n            ...body.attrs,\n            composer: app.composer,\n            disabled: false,\n        });\n    }\n\n    oncreate(vnode: any) {\n        super.oncreate(vnode);\n\n        $(window).on('resize', (this.handlers.onresize = this.updateHeight.bind(this)));\n\n        // We need a little delay before the first height update because the TextEditor doesn't initialize the textarea in the same rendering thread\n        setTimeout(() => {\n            this.updateHeight();\n        }, 10);\n    }\n\n    onremove(vnode: any) {\n        super.onremove(vnode);\n\n        $(window).off('resize', this.handlers.onresize);\n\n        // If we leave the page without quitting the composer, switch to the floating composer\n        if (app.composer.bodyMatches(DiscussionComposer)) {\n            app.composer.minimize();\n        }\n    }\n\n    updateHeight() {\n        const $flexible = this.$('.Composer-flexible');\n\n        // Adapted from Composer.prototype.updateHeight\n        // The comparison is now done directly against the full document\n        if ($flexible.length) {\n            const headerHeight = $flexible.offset()!.top;\n            const paddingBottom = parseInt($flexible.css('padding-bottom'), 10);\n            const footerHeight = this.$('.Composer-footer').outerHeight(true)!;\n\n            $flexible.height(Math.max(window.innerHeight - headerHeight - paddingBottom - footerHeight, 200));\n        }\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import {extend, override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport listItems from 'flarum/common/helpers/listItems';\nimport Composer from 'flarum/forum/components/Composer';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport ComposerState from 'flarum/forum/states/ComposerState';\nimport ComposerPage from './components/ComposerPage';\nimport Button from \"flarum/common/components/Button\";\n\nfunction isComposerPage(): boolean {\n    const currentRouteName = (app.current.data as any).routeName;\n\n    return currentRouteName === 'compose' || currentRouteName === 'composeTag';\n}\n\nfunction shouldUsePage(tagSlugs: string[]): boolean {\n    const pageTags = app.forum.attribute<string>('composerPageTags');\n\n    // If nothing set, applies to all\n    if (!pageTags) {\n        return true;\n    }\n\n    return pageTags.split(',').some(slug => tagSlugs.indexOf(slug) !== -1);\n}\n\napp.initializers.add('clarkwinkelmann-composer-page', () => {\n    app.routes.compose = {path: '/compose', component: ComposerPage};\n    // Calling the parameter the same as the original tag route (:tags) seems to lead to issues detecting the current tag when switching between the 2 routes\n    // So we'll call it :slug instead\n    app.routes.composeTag = {path: '/t/:slug/compose', component: ComposerPage};\n\n    override(Composer.prototype, 'view', function (original) {\n        if (!isComposerPage()) {\n            return original();\n        }\n\n        // We don't really need any of this, but we return an almost identical template to the original to reduce the risk of extensions breaking\n        // Also there's a lot of hooks around those elements so removing them from the DOM might break the reply composer\n        // The only goal is to remove the ComposerBody element so we don't have 2 text editors on the page at the same time\n        return m('.Composer', [\n            m('.Composer-handle', {\n                oncreate: this.configHandle.bind(this),\n            }),\n            m('ul.Composer-controls', listItems(this.controlItems().toArray())),\n            m('.Composer-handle'),\n            m('.Composer-content'),\n        ]);\n    });\n\n    let lastTagSelectionHash = '[]';\n\n    // This code could be in any onupdate hook, as long as it's a component that exists continously\n    extend(Composer.prototype, 'onupdate', function () {\n        const selectedTagSlugs = ((app.composer.fields || {}).tags || []).map(tag => tag.slug());\n\n        const newHash = JSON.stringify(selectedTagSlugs);\n\n        if (lastTagSelectionHash !== newHash) {\n            if (app.composer.bodyMatches(DiscussionComposer) && shouldUsePage(selectedTagSlugs) && !isComposerPage()) {\n                app.composer.show();\n            }\n\n            lastTagSelectionHash = newHash;\n        }\n    });\n\n    override(ComposerState.prototype, 'show', function (original) {\n        if (!this.bodyMatches(DiscussionComposer)) {\n            return original();\n        }\n\n        // Use normal composer for tags where this feature is not enabled, unless we are already on the page\n        if (!shouldUsePage((this.fields?.tags || []).map(tag => tag.slug())) && !isComposerPage()) {\n            return original();\n        }\n\n        // Set position to minimized in case the user leaves changes page without cancelling the composer\n        this.position = ComposerState.Position.HIDDEN;\n\n        if (!isComposerPage()) {\n            m.route.set(app.route('compose'));\n        }\n    });\n\n    override(ComposerState.prototype, 'isVisible', function (original) {\n        // We must return visible here so that features like the exit callbacks get triggered\n        // We must also check the body because otherwise it returns true in ComposerState.prototype.load which creates nested redraws\n        if (this.bodyMatches(DiscussionComposer) && isComposerPage()) {\n            return true;\n        }\n\n        return original();\n    });\n\n    override(DiscussionComposer.prototype, 'oninit', function (original, vnode) {\n        // This code runs before oninit, so this.composer or this.attrs won't work. We need vnode.attrs\n        const content = vnode.attrs.composer.fields.content();\n\n        original(vnode);\n\n        // Copy over the existing value, otherwise it's lost when changing between page<->composer\n        this.composer.fields.content(content);\n    });\n\n    extend(DiscussionComposer.prototype, 'view', function (vdom: any) {\n        if (!isComposerPage()) {\n            return;\n        }\n\n        // Add a second button that we will keep at the bottom on mobile\n        // Otherwise it's not super obvious you need to click at the top right\n        // Some people might even want to hide the top right button to force people to scroll properly to the bottom\n        vdom.children.push(m('.ComposerPageMobileSubmit', Button.component({\n            icon: 'fas fa-paper-plane',\n            className: 'Button Button--primary',\n            onclick: this.onsubmit.bind(this),\n        }, this.attrs.submitLabel)));\n    });\n\n    extend(IndexPage.prototype, 'sidebarItems', function (items) {\n        const newDiscussion = items.get('newDiscussion');\n\n        // Don't replace button if guest, because that button will open the login modal in that situation\n        if (!newDiscussion || !app.session.user) {\n            return;\n        }\n\n        if (isComposerPage()) {\n            newDiscussion.attrs.className = newDiscussion.attrs.className.replace('Button--primary', '');\n            newDiscussion.attrs.icon = 'fas fa-trash';\n            delete newDiscussion.attrs.itemClassName; // Remove App-primaryControl otherwise there might be a conflict with the composer buttons\n            newDiscussion.children = app.translator.trans('clarkwinkelmann-composer-page.forum.nav.cancel');\n\n            return;\n        }\n\n        if (app.composer.bodyMatches(DiscussionComposer)) {\n            // Remove color since the button won't start a new discussion in current tag\n            newDiscussion.attrs.className = newDiscussion.attrs.className.replace('Button--tagColored', '');\n            newDiscussion.attrs.className = newDiscussion.attrs.className.replace('Button--primary', '');\n            if (newDiscussion.attrs.style) {\n                delete newDiscussion.attrs.style['--color'];\n            }\n            newDiscussion.children = app.translator.trans('clarkwinkelmann-composer-page.forum.nav.continue');\n            return;\n        }\n\n        const tag = this.currentTag && this.currentTag();\n\n        const tagSlugs = [];\n\n        if (tag) {\n            tagSlugs.push(tag.slug());\n\n            const parent = tag.parent();\n\n            if (parent) {\n                tagSlugs.push(parent.slug());\n            }\n        }\n\n        // If a tag setting was set, we'll start by opening normally\n        if (!shouldUsePage(tagSlugs)) {\n            return;\n        }\n\n        // Replace button with link. This serves multiple purposes:\n        // - No need to override IndexPage.prototype.newDiscussionAction to change the URL for tags\n        // - Ability to open in new tab\n        newDiscussion.tag = LinkButton;\n        newDiscussion.attrs.href = tag ? app.route('composeTag', {slug: tag.slug()}) : app.route('compose');\n        delete newDiscussion.attrs.onclick;\n    });\n\n    override(IndexPage.prototype, 'newDiscussionAction', function (original) {\n        // Action for \"cancel\" label\n        if (isComposerPage()) {\n            // Call close to invoke any exit callback\n            app.composer.close();\n\n            // Check that the composer successfully closed\n            // (it could still be prevented at that point)\n            if (!(app.composer.body as any).componentClass) {\n                m.route.set(app.route('index'));\n            }\n\n            return Promise.resolve();\n        }\n\n        // Action for our \"continue\" label. Will try to re-open the page, or just the composer if page is not required\n        if (app.composer.bodyMatches(DiscussionComposer)) {\n            app.composer.show();\n\n            return Promise.resolve();\n        }\n\n        return original();\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_extends","assign","bind","target","i","arguments","length","source","apply","this","_setPrototypeOf","p","setPrototypeOf","__proto__","findTag","slug","app","find","tag","localeCompare","undefined","sensitivity","ComposerPage","subClass","superClass","loading","handlers","create","constructor","currentTag","Promise","resolve","m","route","param","include","then","oninit","vnode","extractText","user","set","DiscussionComposer","fields","title","content","Stream","parent","tags","redraw","updateHeight","view","listItems","IndexPage","toArray","body","componentClass","LoadingIndicator","component","attrs","composer","disabled","oncreate","$","window","on","onresize","setTimeout","onremove","off","$flexible","headerHeight","offset","top","paddingBottom","parseInt","css","footerHeight","outerHeight","height","Math","max","innerHeight","Page","isComposerPage","currentRouteName","shouldUsePage","tagSlugs","pageTags","split","some","indexOf","path","override","Composer","original","configHandle","controlItems","lastTagSelectionHash","extend","selectedTagSlugs","map","newHash","JSON","stringify","ComposerState","bodyMatches","position","vdom","children","push","Button","icon","className","onclick","onsubmit","submitLabel","items","newDiscussion","replace","itemClassName","style","LinkButton","href"],"sourceRoot":""}